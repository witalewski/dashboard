{"version":3,"sources":["AppState.js","components/Header.js","global/styleConstants.js","components/Section.js","components/charts/HorizontalBar.js","components/sectionWrappers/SummarySectionWrapper.js","components/sectionWrappers/MonthlySalesSectionWrapper.js","components/MainView.js","App.js","index.js"],"names":["AppState","observable","action","chartData","_this","_this2","setChartData","mockChartData","HeaderStyled","styled","header","_templateObject","Header","_ref","title","react_default","a","createElement","className","SectionStyled","section","Section_templateObject","Section","children","StyledHorizontalBar","div","HorizontalBar_templateObject","HorizontalBar","percent","style","width","concat","left","StyledSummarySectionWrapper","SummarySectionWrapper_templateObject","SummarySectionWrapper","data","Section_Section","format","Date","revenueThisMonth","revenueLastMonth","revenueAverage","HorizontalBar_HorizontalBar","revenueRate","StyledMonthlySalesSectionWrapper","MonthlySalesSectionWrapper_templateObject","MonthlySalesSectionWrapper","MainViewStyled","main","MainView_templateObject","MainView","_Component","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","initialized","inherits","createClass","key","value","loadMockChartData","setState","SummarySectionWrapper_SummarySectionWrapper","summaryChart","MonthlySalesSectionWrapper_MonthlySalesSectionWrapper","monthlySales","Component","inject","appState","observer","App","index_module","Header_Header","components_MainView","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f856e9a8.chunk.js","sourcesContent":["import { observable, action } from 'mobx';\nimport mockChartData from './fixtures/mockChartData.json';\n\nclass AppState {\n  @observable chartData;\n\n  @action setChartData = chartData => {\n    this.chartData = chartData;\n  };\n\n  @action loadMockChartData = () => {\n    this.setChartData(mockChartData);\n  };\n}\n\nexport { AppState };\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { borderColor } from '../global/styleConstants';\n\nconst HeaderStyled = styled.header`\n  width: 100%;\n\n  padding: 24px 36px;\n\n  background: white;\n  border: 1px solid ${borderColor};\n\n  .title {\n    font-weight: normal;\n    font-size: 24px;\n  }\n`;\n\nexport const Header = ({ title }) => (\n  <HeaderStyled>\n    <h1 className=\"title\">{title}</h1>\n  </HeaderStyled>\n);\n","export const borderColor = '#d4dae8';\nexport const textColor = '#6b7783';\nexport const sectionMargin = 16;\nexport const chartBackground = '#eef7f4';\nexport const chartColors = [\n    '#5db990',\n    '#558ca0',\n    '#864ba5',\n    '#829ac0',\n    '#a7e17a',\n];","import React from 'react';\nimport styled from '@emotion/styled';\nimport { borderColor, sectionMargin } from '../global/styleConstants';\n\nconst SectionStyled = styled.section`\n  margin: ${sectionMargin}px;\n  padding: 32px;\n\n  background: white;\n  border: 1px solid ${borderColor};\n  border-radius: 5px;\n\n  font-size: 14px;\n\n  .title {\n    font-size: 16px;\n    text-transform: uppercase;\n  }\n`;\n\nexport const Section = ({ className, title, children }) => (\n  <SectionStyled className={className}>\n    <h2 className=\"title\">{title}</h2>\n    {children}\n  </SectionStyled>\n);\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport {\n  chartBackground,\n  chartColors,\n  textColor,\n} from '../../global/styleConstants';\n\nconst StyledHorizontalBar = styled.div`\n  position: relative;\n\n  width: 100%;\n  height: 32px;\n\n  margin: 8px;\n\n  background: ${chartBackground};\n\n  .bar {\n    height: 100%;\n    background: ${chartColors[0]};\n  }\n\n  .label {\n    position: absolute;\n    top: 50%;\n    font-size: 12px;\n    color: white;\n    transform: translate(calc(-100% - 12px), -50%);\n  }\n\n  .label--outside {\n    color: ${textColor};\n    transform: translate(8px, -50%);\n  }\n`;\n\nexport const HorizontalBar = ({ percent }) => (\n  <StyledHorizontalBar>\n    <div className=\"bar\" style={{ width: `${percent}%` }} />\n    <div\n      className={`label ${percent < 5 && 'label--outside'}`}\n      style={{ left: `${percent}%` }}\n    >\n      {percent}%\n    </div>\n  </StyledHorizontalBar>\n);\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { format } from 'date-fns';\nimport { Section } from '../Section';\nimport { HorizontalBar } from '../charts/HorizontalBar';\n\nconst StyledSummarySectionWrapper = styled.div`\n  min-width: 400px;\n  .summary {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n`;\n\nexport const SummarySectionWrapper = ({ className, data }) => (\n  <StyledSummarySectionWrapper className={className}>\n    <Section title=\"Summary\" className=\"summary\">\n      <div className=\"current-month-summary\">\n        <div className=\"current-month-summary__label\">\n          In {format(new Date(), 'MMMM')} you did\n        </div>\n        <div className=\"current-month-summary__sum\">\n          ${data.revenueThisMonth}\n        </div>\n        <div className=\"comparison\">\n          <div className=\"comparison__label\">Last month you did:</div>\n          <div className=\"comparison__sum\">${data.revenueLastMonth}</div>\n        </div>\n        <div className=\"comparison\">\n          <div className=\"comparison__label\">Average monthly revenue:</div>\n          <div className=\"comparison__sum\">${data.revenueAverage}</div>\n        </div>\n        <HorizontalBar percent={data.revenueRate * 100} />\n        <div className=\"percent-of-average-label\">\n          of your monthly average revenue\n        </div>\n      </div>\n    </Section>\n  </StyledSummarySectionWrapper>\n);\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Section } from '../Section';\n\nconst StyledMonthlySalesSectionWrapper = styled.div`\n  min-width: 400px;\n  .section-content {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n`;\n\nexport const MonthlySalesSectionWrapper = ({ className, data }) => (\n  <StyledMonthlySalesSectionWrapper className={className}>\n    <Section title=\"Monthly Sales\" className=\"monthly-sales\">\n      <div className=\"section-content\">SECTION CONTENT</div>\n    </Section>\n  </StyledMonthlySalesSectionWrapper>\n);\n","import React, { Component } from 'react';\nimport styled from '@emotion/styled';\nimport { inject, observer } from 'mobx-react';\nimport { Section } from './Section';\nimport { SummarySectionWrapper } from './sectionWrappers/SummarySectionWrapper';\nimport { MonthlySalesSectionWrapper } from './sectionWrappers/MonthlySalesSectionWrapper';\n\nconst MainViewStyled = styled.main`\n  display: flex;\n  flex-direction: column;\n\n  .container {\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  .summary-section-wrapper {\n    flex: 1 3 200px;\n  }\n\n  .monthly-sales-section-wrapper {\n    flex: 3 1 600px;\n  }\n\n  .most-popular-offers-section-wrapper,\n  .payment-methods-section-wrapper,\n  .devices-section-wrapper {\n    flex: 1 1 200px;\n  }\n`;\n\nexport class MainView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { initialized: false };\n  }\n\n  componentDidMount() {\n    if (!this.state.initialized) {\n      this.props.loadMockChartData();\n      this.setState({ initialized: true });\n    }\n  }\n\n  render() {\n    const { chartData } = this.props;\n    return chartData ? (\n      <MainViewStyled>\n        <div className=\"container\">\n          <SummarySectionWrapper\n            className=\"summary-section-wrapper\"\n            data={chartData.summaryChart.data}\n          />\n          <MonthlySalesSectionWrapper\n            className=\"monthly-sales-section-wrapper\"\n            data={chartData.monthlySales}\n          />\n        </div>\n        <div className=\"container\">\n          <Section\n            title=\"Most popular offers\"\n            className=\"most-popular-offers-section-wrapper\"\n          >\n            [Section Content]\n          </Section>\n          <Section\n            title=\"Payment methods\"\n            className=\"payment-methods-section-wrapper\"\n          >\n            [Section Content]\n          </Section>\n          <Section title=\"Devices\" className=\"devices-section-wrapper\">\n            [Section Content]\n          </Section>\n        </div>\n        <Section title=\"Revenue\" className=\"revenue-section-wrapper\">\n          [Section Content]\n        </Section>\n        <Section title=\"Geography\" className=\"geography-section-wrapper\">\n          [Section Content]\n        </Section>\n      </MainViewStyled>\n    ) : null;\n  }\n}\n\nexport default inject(({ appState }) => ({\n  chartData: appState.chartData,\n  loadMockChartData: appState.loadMockChartData,\n}))(observer(MainView));\n","import React, { Component } from 'react';\nimport { Provider } from 'mobx-react';\nimport { AppState } from './AppState';\nimport { Header } from './components/Header';\nimport MainView from './components/MainView';\nimport './index.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.appState = new AppState();\n  }\n\n  render() {\n    return (\n      <Provider appState={this.appState}>\n        <div className=\"App\">\n          <Header title=\"Dashboard\" />\n          <MainView />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}