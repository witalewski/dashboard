{"version":3,"sources":["AppState.js","global/styleConstants.js","components/Header.js","components/Section.js","utils/mapDataSetLabels.js","components/sections/LineChartSection.js","components/sections/PieChartSection.js","components/sections/BarChartSection.js","utils/getLowerRangeSeriesKeys.js","utils/getLabelMap.js","components/sections/ChartSection.js","components/charts/HorizontalBar.js","components/sections/SummarySection.js","components/MainView.js","App.js","index.js"],"names":["AppState","observable","action","chartData","_this","_this2","setChartData","mockChartData","chartColors","HeaderStyled","styled","header","_templateObject","Header","_ref","title","react_default","a","createElement","className","SectionStyled","section","Section_templateObject","Section","children","mapDataSetLabels","labelMap","data","map","item","Object","keys","reduce","acc","key","objectSpread","defineProperty","LineChartSection","processedData","Section_Section","LineChart","width","height","margin","top","right","left","bottom","XAxis","dataKey","YAxis","CartesianGrid","strokeDasharray","Tooltip","Legend","slice","i","Line","type","stroke","length","PieChartSection","sum","_ref2","value","percentData","_ref3","name","label","Math","round","PieChart","Pie","cx","cy","innerRadius","outerRadius","onAnimationEnd","labels","document","querySelectorAll","concat","textContent","reformatLabels","_ref4","Cell","fill","align","layout","wrapperStyle","BarChartSection","lowerRangeSeriesKeys","sortedSeries","values","filter","e","avgValue","sort","b","halfOfSortedSeriesLength","floor","lowerRangeSeries","middleItem","abs","push","getLowerRangeSeriesKeys","ComposedChart","yAxisId","orientation","match","Bar","barSize","indexOf","getLabelMap","source","split","ChartSection","dataType","PieChartSection_PieChartSection","LineChartSection_LineChartSection","BarChartSection_BarChartSection","Error","StyledHorizontalBar","div","HorizontalBar_templateObject","HorizontalBar","percent","style","SummaryContentStyled","SummarySection_templateObject","SummarySection","format","Date","revenueThisMonth","revenueLastMonth","revenueAverage","HorizontalBar_HorizontalBar","revenueRate","MainViewStyled","main","MainView_templateObject","MainView","_Component","props","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","initialized","inherits","createClass","loadMockChartData","setState","SummarySection_SummarySection","summaryChart","ChartSection_ChartSection","monthlySales","mostPopular","paymentMethods","devices","revenueMonthToMonth","Component","inject","appState","observer","App","index_module","Header_Header","components_MainView","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.d8752da0.chunk.js","sourcesContent":["import { observable, action } from 'mobx';\nimport mockChartData from './fixtures/mockChartData.json';\n\nclass AppState {\n  @observable chartData;\n\n  @action setChartData = chartData => {\n    this.chartData = chartData;\n  };\n\n  @action loadMockChartData = () => {\n    this.setChartData(mockChartData);\n  };\n}\n\nexport { AppState };\n","export const borderColor = '#d4dae8';\nexport const textColor = '#6b7783';\nexport const sectionMargin = 16;\nexport const chartBackground = '#eef7f4';\nexport const chartColors = [\n    '#5db990',\n    '#864ba5',\n    '#a7e17a',\n    '#558ca0',\n    '#829ac0',\n];","import React from 'react';\nimport styled from '@emotion/styled';\nimport { borderColor } from '../global/styleConstants';\n\nconst HeaderStyled = styled.header`\n  width: 100%;\n\n  padding: 24px 36px;\n\n  background: white;\n  border: 1px solid ${borderColor};\n\n  .title {\n    font-weight: normal;\n    font-size: 24px;\n  }\n`;\n\nexport const Header = ({ title }) => (\n  <HeaderStyled>\n    <h1 className=\"title\">{title}</h1>\n  </HeaderStyled>\n);\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { borderColor, sectionMargin } from '../global/styleConstants';\n\nconst SectionStyled = styled.section`\n  margin: ${sectionMargin}px;\n  padding: 32px;\n\n  background: white;\n  border: 1px solid ${borderColor};\n  border-radius: 5px;\n\n  font-size: 14px;\n\n  .title {\n    font-size: 16px;\n    text-transform: uppercase;\n  }\n\n\n.section-content {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n`;\n\nexport const Section = ({ className, title, children }) => (\n  <SectionStyled className={className}>\n    <h2 className=\"title\">{title}</h2>\n    <div className=\"section-content\">{children}</div>\n  </SectionStyled>\n);\n","export const mapDataSetLabels = (labelMap, data) =>\n  data.map(item =>\n    Object.keys(item).reduce(\n      (acc, key) => ({ ...acc, [labelMap[key]]: item[key] }),\n      {}\n    )\n  );\n","import React from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from 'recharts';\nimport { chartColors } from '../../global/styleConstants';\nimport { Section } from '../Section';\nimport { mapDataSetLabels } from '../../utils/mapDataSetLabels';\n\nexport const LineChartSection = ({ className, data, title, labelMap }) => {\n  const processedData = mapDataSetLabels(labelMap, data);\n  return (\n    <Section title={title} className={className}>\n      <LineChart\n        width={600}\n        height={300}\n        data={processedData}\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n      >\n        <XAxis dataKey={Object.keys(data[0])[0]} />\n        <YAxis />\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <Tooltip />\n        <Legend />\n        {Object.keys(processedData[0])\n          .slice(1)\n          .map((key, i) => (\n            <Line\n              key={key}\n              type=\"monotone\"\n              dataKey={key}\n              stroke={chartColors[i % chartColors.length]}\n            />\n          ))}\n      </LineChart>\n    </Section>\n  );\n};\n","import React from 'react';\nimport { PieChart, Pie, Cell, Legend, Tooltip } from 'recharts';\nimport { chartColors } from '../../global/styleConstants';\nimport { Section } from '../Section';\n\nconst reformatLabels = className => () => {\n  const labels = document.querySelectorAll(\n    `.${className} .recharts-pie-label-text tspan`\n  );\n  for (let i = 0; i < labels.length; i++) {\n    labels[i].textContent = `${labels[i].textContent}%`;\n  }\n};\n\nexport const PieChartSection = ({ className, data, title }) => {\n  const sum = data.reduce((acc, { value }) => acc + value, 0);\n  const percentData = data.map(({ value, label }) => ({\n    name: label,\n    value: Math.round((value * 100) / sum),\n  }));\n  return (\n    <Section title={title} className={className}>\n      <PieChart width={350} height={250}>\n        <Pie\n          data={percentData}\n          cx={120}\n          cy={120}\n          innerRadius={40}\n          outerRadius={80}\n          dataKey=\"value\"\n          label\n          onAnimationEnd={reformatLabels(className)}\n        >\n          {percentData.map(({ value }, i) => (\n            <Cell key={value} fill={chartColors[i % chartColors.length]} />\n          ))}\n        </Pie>\n        <Tooltip />\n        <Legend\n          width={200}\n          align=\"right\"\n          layout=\"vertical\"\n          wrapperStyle={{ top: 80, left: 260 }}\n        />\n      </PieChart>\n    </Section>\n  );\n};\n","import React from 'react';\nimport {\n  ComposedChart,\n  Line,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from 'recharts';\nimport { chartColors } from '../../global/styleConstants';\nimport { Section } from '../Section';\nimport { mapDataSetLabels } from '../../utils/mapDataSetLabels';\nimport { getLowerRangeSeriesKeys } from '../../utils/getLowerRangeSeriesKeys';\n\nexport const BarChartSection = ({ className, data, title, labelMap }) => {\n  const processedData = mapDataSetLabels(labelMap, data);\n  const lowerRangeSeriesKeys = getLowerRangeSeriesKeys(labelMap, processedData);\n  return (\n    <Section title={title} className={className}>\n      <ComposedChart\n        width={600}\n        height={400}\n        data={processedData}\n        margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n      >\n        <CartesianGrid stroke=\"#f5f5f5\" />\n        <XAxis dataKey={Object.keys(data[0])[0]} />\n        <YAxis yAxisId=\"lower\" />\n        <YAxis yAxisId=\"upper\" orientation=\"right\" />\n        <Tooltip />\n        <Legend />\n        {Object.keys(data[0])\n          .filter(key => key.match(/bar/))\n          .map((key, i) => (\n            <Bar\n              key={labelMap[key]}\n              dataKey={labelMap[key]}\n              barSize={20}\n              fill={chartColors[i % chartColors.length]}\n              yAxisId={\n                lowerRangeSeriesKeys.indexOf(labelMap[key]) > -1\n                  ? 'lower'\n                  : 'upper'\n              }\n            />\n          ))}\n        {Object.keys(data[0])\n          .filter(key => key.match(/line/))\n          .map((key, i) => (\n            <Line\n              key={labelMap[key]}\n              type=\"monotone\"\n              dataKey={labelMap[key]}\n              stroke={chartColors[i % chartColors.length]}\n              yAxisId={\n                lowerRangeSeriesKeys.indexOf(labelMap[key]) > -1\n                  ? 'lower'\n                  : 'upper'\n              }\n            />\n          ))}\n      </ComposedChart>\n    </Section>\n  );\n};\n","export const getLowerRangeSeriesKeys = (labelMap, processedData) => {\n  const sortedSeries = Object.values(labelMap)\n    .filter(e => e !== 'label')\n    .map(key => ({\n      key: key,\n      avgValue:\n        processedData.reduce((acc, item) => acc + item[key], 0) /\n        processedData.length,\n    }))\n    .sort((a, b) => a.avgValue - b.avgValue);\n  const halfOfSortedSeriesLength = Math.floor(sortedSeries.length / 2);\n  const lowerRangeSeries = sortedSeries.slice(0, halfOfSortedSeriesLength);\n  if (sortedSeries.length % 2 !== 0) {\n    let middleItem = sortedSeries[halfOfSortedSeriesLength];\n    if (\n      Math.abs(\n        middleItem.avgValue - sortedSeries[halfOfSortedSeriesLength - 1]\n      ) <\n      Math.abs(middleItem.avgValue - sortedSeries[halfOfSortedSeriesLength + 1])\n    ) {\n      lowerRangeSeries.push(middleItem);\n    }\n  }\n  return lowerRangeSeries.map(item => item.key);\n};\n","export const getLabelMap = source => ({\n  label: 'label',\n  ...Object.keys(source)\n    .filter(key => key.match(/-label/))\n    .reduce((acc, key) => ({ ...acc, [key.split('-')[0]]: source[key] }), {}),\n});\n","import React from 'react';\nimport { LineChartSection } from './LineChartSection';\nimport { PieChartSection } from './PieChartSection';\nimport { BarChartSection } from './BarChartSection';\nimport { getLabelMap } from '../../utils/getLabelMap';\n\nexport const ChartSection = ({\n  className,\n  source,\n  title\n}) => {\n  const { dataType, data } = source;\n\n  switch (dataType) {\n    case 'pie':\n      return (\n        <PieChartSection\n          className={className}\n          title={title}\n          data={data}\n        />\n      );\n    case 'line':\n    case 'line2':\n      return (\n        <LineChartSection\n          className={className}\n          title={title}\n          data={data}\n          labelMap={getLabelMap(source)}\n        />\n      );\n    case 'bar':\n      return (\n        <BarChartSection\n          className={className}\n          title={title}\n          data={data}\n          labelMap={getLabelMap(source)}\n        />\n      );\n    default:\n      throw new Error(`Unsupported data type: ${dataType}`);\n  }\n};\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport {\n  chartBackground,\n  chartColors,\n  textColor,\n} from '../../global/styleConstants';\n\nconst StyledHorizontalBar = styled.div`\n  position: relative;\n\n  width: 100%;\n  height: 32px;\n\n  margin: 8px;\n\n  background: ${chartBackground};\n\n  .bar {\n    height: 100%;\n    background: ${chartColors[0]};\n  }\n\n  .label {\n    position: absolute;\n    top: 50%;\n    font-size: 12px;\n    color: white;\n    transform: translate(calc(-100% - 12px), -50%);\n  }\n\n  .label--outside {\n    color: ${textColor};\n    transform: translate(8px, -50%);\n  }\n`;\n\nexport const HorizontalBar = ({ percent }) => (\n  <StyledHorizontalBar>\n    <div className=\"bar\" style={{ width: `${percent}%` }} />\n    <div\n      className={`label ${percent < 5 && 'label--outside'}`}\n      style={{ left: `${percent}%` }}\n    >\n      {percent}%\n    </div>\n  </StyledHorizontalBar>\n);\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { format } from 'date-fns';\nimport { Section } from '../Section';\nimport { HorizontalBar } from '../charts/HorizontalBar';\n\nconst SummaryContentStyled = styled.div`\n  min-width: 400px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const SummarySection = ({ title, className, data }) => (\n  <Section title={title} className={className}>\n    <SummaryContentStyled>\n      <div className=\"current-month-summary__label\">\n        In {format(new Date(), 'MMMM')} you did\n      </div>\n      <div className=\"current-month-summary__sum\">${data.revenueThisMonth}</div>\n      <div className=\"comparison\">\n        <div className=\"comparison__label\">Last month you did:</div>\n        <div className=\"comparison__sum\">${data.revenueLastMonth}</div>\n      </div>\n      <div className=\"comparison\">\n        <div className=\"comparison__label\">Average monthly revenue:</div>\n        <div className=\"comparison__sum\">${data.revenueAverage}</div>\n      </div>\n      <HorizontalBar percent={data.revenueRate * 100} />\n      <div className=\"percent-of-average-label\">\n        of your monthly average revenue\n      </div>\n    </SummaryContentStyled>\n  </Section>\n);\n","import React, { Component } from 'react';\nimport styled from '@emotion/styled';\nimport { inject, observer } from 'mobx-react';\nimport { Section } from './Section';\nimport { ChartSection } from './sections/ChartSection';\nimport { SummarySection } from './sections/SummarySection';\n\nconst MainViewStyled = styled.main`\n  display: flex;\n  flex-direction: column;\n\n  .container {\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  .summary-section {\n    flex: 1 3 200px;\n  }\n\n  .monthly-sales-section {\n    flex: 3 1 600px;\n  }\n\n  .most-popular-offers-section,\n  .payment-methods-section,\n  .devices-section {\n    flex: 1 1 200px;\n  }\n`;\n\nexport class MainView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { initialized: false };\n  }\n\n  componentDidMount() {\n    if (!this.state.initialized) {\n      this.props.loadMockChartData();\n      this.setState({ initialized: true });\n    }\n  }\n\n  render() {\n    const { chartData } = this.props;\n    return chartData ? (\n      <MainViewStyled>\n        <div className=\"container\">\n          <SummarySection\n            className=\"summary-section\"\n            title=\"Summary\"\n            data={chartData.summaryChart.data}\n          />\n          <ChartSection\n            title=\"Monthly Sales\"\n            className=\"monthly-sales-section\"\n            source={chartData.monthlySales}\n          />\n        </div>\n        <div className=\"container\">\n          <ChartSection\n            title=\"Most Popular Offers\"\n            className=\"most-popular-offers-section\"\n            source={chartData.mostPopular}\n          />\n          <ChartSection\n            title=\"Payment Methods\"\n            className=\"payment-methods-section\"\n            source={chartData.paymentMethods}\n          />\n          <ChartSection\n            title=\"Devices\"\n            className=\"devices-section\"\n            source={chartData.devices}\n          />\n        </div>\n        <ChartSection\n          title=\"Revenue This Month vs Revenue Previous Month\"\n          className=\"revenue-section\"\n          source={chartData.revenueMonthToMonth}\n        />\n        <Section title=\"Geography\" className=\"geography-section\">\n          [Section Content]\n        </Section>\n      </MainViewStyled>\n    ) : null;\n  }\n}\n\nexport default inject(({ appState }) => ({\n  chartData: appState.chartData,\n  loadMockChartData: appState.loadMockChartData,\n}))(observer(MainView));\n","import React, { Component } from 'react';\nimport { Provider } from 'mobx-react';\nimport { AppState } from './AppState';\nimport { Header } from './components/Header';\nimport MainView from './components/MainView';\nimport './index.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.appState = new AppState();\n  }\n\n  render() {\n    return (\n      <Provider appState={this.appState}>\n        <div className=\"App\">\n          <Header title=\"Dashboard\" />\n          <MainView />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}