{"version":3,"file":"static/iframe.e0f2788945036212557f.bundle.js","sources":["webpack:///./src/components/sections/PieChartSection.js"],"sourcesContent":["import React from 'react';\nimport { PieChart, Pie, Cell, Legend, Tooltip } from 'recharts';\nimport { chartColors } from '../../global/styleConstants';\nimport { Section } from '../Section';\n\nconst reformatLabels = className => () => {\n  const labels = document.querySelectorAll(\n    `.${className} .recharts-pie-label-text tspan`\n  );\n  for (let i = 0; i < labels.length; i++) {\n    labels[i].textContent = `${labels[i].textContent}%`;\n  }\n};\n\nexport const PieChartSection = ({ className, data, title }) => {\n  const sum = data.reduce((acc, { value }) => acc + value, 0);\n  const percentData = data.map(({ value, label }) => ({\n    name: label,\n    value: Math.round((value * 100) / sum),\n  }));\n  return (\n    <Section title={title} className={className}>\n      <PieChart width={350} height={250}>\n        <Pie\n          data={percentData}\n          cx={120}\n          cy={120}\n          innerRadius={40}\n          outerRadius={80}\n          dataKey=\"value\"\n          label\n          onAnimationEnd={reformatLabels(className)}\n        >\n          {percentData.map(({ value }, i) => (\n            <Cell key={value} fill={chartColors[i % chartColors.length]} />\n          ))}\n        </Pie>\n        <Tooltip />\n        <Legend\n          width={200}\n          align=\"right\"\n          layout=\"vertical\"\n          wrapperStyle={{ top: 80, left: 260 }}\n        />\n      </PieChart>\n    </Section>\n  );\n};\n"],"mappings":"AAAA","sourceRoot":""}